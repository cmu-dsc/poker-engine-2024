syntax = "proto3";

package poker;

service PokerBot {
  // Initial readiness check at the beginning of the match.
  rpc ReadyCheck (ReadyCheckRequest) returns (ReadyCheckResponse);

  // Requests an action from a player.
  rpc RequestAction (ActionRequest) returns (ActionResponse);

  // Notifies the end of a round.
  rpc EndRound (EndRoundMessage) returns (EndRoundResponse);
}

message ReadyCheckRequest {
  repeated string player_names = 1;
}

message ReadyCheckResponse {
  bool ready = 1;
}

enum ActionType {
  FOLD = 0;
  CALL = 1;
  CHECK = 2;
  RAISE = 3;
}

message Action {
  ActionType action = 1;
  int32 amount = 2;
}

message ActionRequest {
  float game_clock = 1;
  repeated string player_hand = 2;
  repeated string board_cards = 3;
  repeated Action new_actions = 4;
}

message ActionResponse {
  Action action = 1;
}

message EndRoundMessage {
  repeated string player_hand = 1;
  repeated string opponent_hand = 2;
  repeated string board_cards = 3;
  repeated Action new_actions = 4;
  int32 delta = 5;
  bool is_match_over = 6;
}

message EndRoundResponse {
  repeated string logs = 1;
}
